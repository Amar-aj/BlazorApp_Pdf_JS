@page "/pdf"
@inject IJSRuntime JS
@rendermode InteractiveServer
<h3>Generate and Read PDF</h3>

<h4>Generate PDF</h4>
<button @onclick="GeneratePdf">Generate PDF</button>

<h4>Read PDF</h4>
<InputFile OnChange="HandleFileSelected" MaxFileSize="10485760" />  <!-- 10 MB -->


<p>@pdfContent</p>

@code {
    private string pdfContent = string.Empty;

    private async Task GeneratePdf()
    {
        var htmlContent = "<h1>Hello, Blazor PDF</h1><p>This is dynamically generated.</p>";
        await JS.InvokeVoidAsync("generatePdf", htmlContent, "generated.pdf");
    }

   
    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var files = e.File;
        const int chunkSize = 512000; // 500 KB chunks

        if (files != null)
        {
            var buffer = new byte[chunkSize];
            int bytesRead;
            using (var stream = files.OpenReadStream(long.MaxValue))
            using (var memoryStream = new MemoryStream())
            {
                while ((bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length)) > 0)
                {
                    await memoryStream.WriteAsync(buffer, 0, bytesRead);
                }

                var base64 = Convert.ToBase64String(memoryStream.ToArray());
                var pdfDataUrl = $"data:application/pdf;base64,{base64}";

                pdfContent = await JS.InvokeAsync<string>("readPdf", pdfDataUrl);
                StateHasChanged();
            }
        }
    }


}
